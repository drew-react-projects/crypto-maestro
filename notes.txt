1/ References
- Tutorial: https://www.youtube.com/watch?v=9DDX3US3kss
- Coinranking API: https://rapidapi.com/Coinranking/api/coinranking1
- Bing News Search API: https://rapidapi.com/microsoft-azure-org-microsoft-cognitive-services/api/bing-news-search1
- Extras: https://gist.github.com/adrianhajdin/1008c664fe7896b316f5efbff8d97935
- Documentation for Ant Design: https://ant.design/

2/ Reflection
- Commit 3: 
  + Import Components in App.js in 1 line
    * Create index.js in components folder
    * export { default as Component } from './Navbar'; in components/index.js
    * import { Navbar } from './components'; in App.js
    * Same things for other Components if you have more
  
  + <Menu.Item icon={<HomeOutlined />}>
    * Remember to use icon as Tag as above line

  + ReactDOM.render(<Router><App /></Router>,document.getElementById('root'));
    * NOTHING RENDERRED and LINKS DONT WORK is you dont wrap Router around App Component like this

- Commit 4: Switch has been replaced with Routes

3/ How to configure and use Redux Toolkit
- Documentation: https://redux.js.org/tutorials/essentials/part-7-rtk-query-basics
- If there is anything cloudy, just relate to the documentation

  3.1 Create src/app/store.js
    + import { configureStore } from '@reduxjs/toolkit';
    + export configureStore({ reducer: {} });

  3.2 Create src/services/cryptoApi.js

  3.3 Go to RapidApi (for this app) -> find Coinranking -> Copy the var options -> paste temporarily to cryptoApi.js

  3.4 In src/index.js: 
    + import { Provider } from 'react-redux'; import store from './app/store'
    + Wrap <App /> with Provider -> the entire App Component now have access to the store variable

  3.5 In src/services/cryptoApi.js
    + import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';
    + Create 2 variable to contain: headers and baseUrl from var options
    + export const cryptoApi = createApi({ reducerPath:..., baseQuery: fetchBaseQuery({...}), endpoints:... });
    + export { useGetCryptosQuery } = cryptoApi;

  3.6 Connect the API to the store
    +  ... reducer: { [ cryptoApi.reducerPath ]: cryptoApi.reducer}

  3.7 In Component
    + const [data, isFetching] = useGetCryptosQuery();
    + isFetching is to show any loading animation woo hoo!
    + data is the object that contains the response

4/ When working on Crypto details
- useParams() allows you to use the id in the url as a variable 